name: WebFreeCloud自动登录脚本

on:
  schedule:
    - cron: '0 6 * * 1'
  workflow_dispatch:

jobs:
  auth-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # 新增步骤：设置 SOCKS5 代理
    - name: 配置 SOCKS5 代理
      env:
        SOCKS5_HOST: ${{ secrets.SOCKS5_HOST }}  # 代理服务器地址
        SOCKS5_PORT: ${{ secrets.SOCKS5_PORT }}  # 代理端口
        SOCKS5_USER: ${{ secrets.SOCKS5_USER }}  # 代理用户名(如果有)
        SOCKS5_PASS: ${{ secrets.SOCKS5_PASS }}  # 代理密码(如果有)
      run: |
        # 构造 SOCKS5 代理URL
        if [[ -n "$SOCKS5_USER" && -n "$SOCKS5_PASS" ]]; then
          echo "SOCKS_PROXY=socks5://$SOCKS5_USER:$SOCKS5_PASS@$SOCKS5_HOST:$SOCKS5_PORT" >> $GITHUB_ENV
        else
          echo "SOCKS_PROXY=socks5://$SOCKS5_HOST:$SOCKS5_PORT" >> $GITHUB_ENV
        fi

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 requests[socks]  # 增加socks支持

    # 可选：代理连通性测试
    - name: 测试代理连通性
      run: |
        curl --socks5 ${{ env.SOCKS_PROXY }} https://httpbin.org/ip

    - name: Run auth check
      env:
        TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
        TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        USER_CONFIGS_JSON: ${{ secrets.USER_CONFIGS_JSON }}
        SOCKS_PROXY: ${{ env.SOCKS_PROXY }}  # 传递代理变量
      run: |
        python ./webfreecloud/login.py
